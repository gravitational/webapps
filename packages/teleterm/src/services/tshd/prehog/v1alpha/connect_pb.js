// source: prehog/v1alpha/connect.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent', null, global);
goog.exportSymbol('proto.prehog.v1alpha.ConnectAccessRequestCreateEvent', null, global);
goog.exportSymbol('proto.prehog.v1alpha.ConnectAccessRequestReviewEvent', null, global);
goog.exportSymbol('proto.prehog.v1alpha.ConnectClusterLoginEvent', null, global);
goog.exportSymbol('proto.prehog.v1alpha.ConnectFileTransferRunEvent', null, global);
goog.exportSymbol('proto.prehog.v1alpha.ConnectProtocolUseEvent', null, global);
goog.exportSymbol('proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent', null, global);
goog.exportSymbol('proto.prehog.v1alpha.SubmitConnectEventRequest', null, global);
goog.exportSymbol('proto.prehog.v1alpha.SubmitConnectEventRequest.EventCase', null, global);
goog.exportSymbol('proto.prehog.v1alpha.SubmitConnectEventResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.ConnectClusterLoginEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.ConnectClusterLoginEvent.displayName = 'proto.prehog.v1alpha.ConnectClusterLoginEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.ConnectProtocolUseEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.ConnectProtocolUseEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.ConnectProtocolUseEvent.displayName = 'proto.prehog.v1alpha.ConnectProtocolUseEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.ConnectAccessRequestCreateEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.ConnectAccessRequestCreateEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.ConnectAccessRequestCreateEvent.displayName = 'proto.prehog.v1alpha.ConnectAccessRequestCreateEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.ConnectAccessRequestReviewEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.ConnectAccessRequestReviewEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.ConnectAccessRequestReviewEvent.displayName = 'proto.prehog.v1alpha.ConnectAccessRequestReviewEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent.displayName = 'proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.ConnectFileTransferRunEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.ConnectFileTransferRunEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.ConnectFileTransferRunEvent.displayName = 'proto.prehog.v1alpha.ConnectFileTransferRunEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent.displayName = 'proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.SubmitConnectEventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.prehog.v1alpha.SubmitConnectEventRequest.oneofGroups_);
};
goog.inherits(proto.prehog.v1alpha.SubmitConnectEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.SubmitConnectEventRequest.displayName = 'proto.prehog.v1alpha.SubmitConnectEventRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.SubmitConnectEventResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.SubmitConnectEventResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.SubmitConnectEventResponse.displayName = 'proto.prehog.v1alpha.SubmitConnectEventResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.ConnectClusterLoginEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.ConnectClusterLoginEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    connectorType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    arch: jspb.Message.getFieldWithDefault(msg, 4, ""),
    os: jspb.Message.getFieldWithDefault(msg, 5, ""),
    osVersion: jspb.Message.getFieldWithDefault(msg, 6, ""),
    appVersion: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.ConnectClusterLoginEvent}
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.ConnectClusterLoginEvent;
  return proto.prehog.v1alpha.ConnectClusterLoginEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.ConnectClusterLoginEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.ConnectClusterLoginEvent}
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectorType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setArch(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOs(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOsVersion(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.ConnectClusterLoginEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.ConnectClusterLoginEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getConnectorType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getArch();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOs();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOsVersion();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAppVersion();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string cluster_name = 1;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.prototype.getClusterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectClusterLoginEvent} returns this
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.prototype.setClusterName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_name = 2;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectClusterLoginEvent} returns this
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string connector_type = 3;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.prototype.getConnectorType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectClusterLoginEvent} returns this
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.prototype.setConnectorType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string arch = 4;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.prototype.getArch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectClusterLoginEvent} returns this
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.prototype.setArch = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string os = 5;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.prototype.getOs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectClusterLoginEvent} returns this
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.prototype.setOs = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string os_version = 6;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.prototype.getOsVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectClusterLoginEvent} returns this
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.prototype.setOsVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string app_version = 7;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.prototype.getAppVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectClusterLoginEvent} returns this
 */
proto.prehog.v1alpha.ConnectClusterLoginEvent.prototype.setAppVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.ConnectProtocolUseEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.ConnectProtocolUseEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.ConnectProtocolUseEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.ConnectProtocolUseEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    protocol: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.ConnectProtocolUseEvent}
 */
proto.prehog.v1alpha.ConnectProtocolUseEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.ConnectProtocolUseEvent;
  return proto.prehog.v1alpha.ConnectProtocolUseEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.ConnectProtocolUseEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.ConnectProtocolUseEvent}
 */
proto.prehog.v1alpha.ConnectProtocolUseEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProtocol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.ConnectProtocolUseEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.ConnectProtocolUseEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.ConnectProtocolUseEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.ConnectProtocolUseEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProtocol();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string cluster_name = 1;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectProtocolUseEvent.prototype.getClusterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectProtocolUseEvent} returns this
 */
proto.prehog.v1alpha.ConnectProtocolUseEvent.prototype.setClusterName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_name = 2;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectProtocolUseEvent.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectProtocolUseEvent} returns this
 */
proto.prehog.v1alpha.ConnectProtocolUseEvent.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string protocol = 3;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectProtocolUseEvent.prototype.getProtocol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectProtocolUseEvent} returns this
 */
proto.prehog.v1alpha.ConnectProtocolUseEvent.prototype.setProtocol = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.ConnectAccessRequestCreateEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.ConnectAccessRequestCreateEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.ConnectAccessRequestCreateEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.ConnectAccessRequestCreateEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    kind: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.ConnectAccessRequestCreateEvent}
 */
proto.prehog.v1alpha.ConnectAccessRequestCreateEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.ConnectAccessRequestCreateEvent;
  return proto.prehog.v1alpha.ConnectAccessRequestCreateEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.ConnectAccessRequestCreateEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.ConnectAccessRequestCreateEvent}
 */
proto.prehog.v1alpha.ConnectAccessRequestCreateEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.ConnectAccessRequestCreateEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.ConnectAccessRequestCreateEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.ConnectAccessRequestCreateEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.ConnectAccessRequestCreateEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string cluster_name = 1;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectAccessRequestCreateEvent.prototype.getClusterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectAccessRequestCreateEvent} returns this
 */
proto.prehog.v1alpha.ConnectAccessRequestCreateEvent.prototype.setClusterName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_name = 2;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectAccessRequestCreateEvent.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectAccessRequestCreateEvent} returns this
 */
proto.prehog.v1alpha.ConnectAccessRequestCreateEvent.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string kind = 3;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectAccessRequestCreateEvent.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectAccessRequestCreateEvent} returns this
 */
proto.prehog.v1alpha.ConnectAccessRequestCreateEvent.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.ConnectAccessRequestReviewEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.ConnectAccessRequestReviewEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.ConnectAccessRequestReviewEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.ConnectAccessRequestReviewEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.ConnectAccessRequestReviewEvent}
 */
proto.prehog.v1alpha.ConnectAccessRequestReviewEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.ConnectAccessRequestReviewEvent;
  return proto.prehog.v1alpha.ConnectAccessRequestReviewEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.ConnectAccessRequestReviewEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.ConnectAccessRequestReviewEvent}
 */
proto.prehog.v1alpha.ConnectAccessRequestReviewEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.ConnectAccessRequestReviewEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.ConnectAccessRequestReviewEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.ConnectAccessRequestReviewEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.ConnectAccessRequestReviewEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string cluster_name = 1;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectAccessRequestReviewEvent.prototype.getClusterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectAccessRequestReviewEvent} returns this
 */
proto.prehog.v1alpha.ConnectAccessRequestReviewEvent.prototype.setClusterName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_name = 2;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectAccessRequestReviewEvent.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectAccessRequestReviewEvent} returns this
 */
proto.prehog.v1alpha.ConnectAccessRequestReviewEvent.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent}
 */
proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent;
  return proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent}
 */
proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string cluster_name = 1;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent.prototype.getClusterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent} returns this
 */
proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent.prototype.setClusterName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_name = 2;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent} returns this
 */
proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.ConnectFileTransferRunEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.ConnectFileTransferRunEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.ConnectFileTransferRunEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.ConnectFileTransferRunEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isUpload: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.ConnectFileTransferRunEvent}
 */
proto.prehog.v1alpha.ConnectFileTransferRunEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.ConnectFileTransferRunEvent;
  return proto.prehog.v1alpha.ConnectFileTransferRunEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.ConnectFileTransferRunEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.ConnectFileTransferRunEvent}
 */
proto.prehog.v1alpha.ConnectFileTransferRunEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsUpload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.ConnectFileTransferRunEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.ConnectFileTransferRunEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.ConnectFileTransferRunEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.ConnectFileTransferRunEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsUpload();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string cluster_name = 1;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectFileTransferRunEvent.prototype.getClusterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectFileTransferRunEvent} returns this
 */
proto.prehog.v1alpha.ConnectFileTransferRunEvent.prototype.setClusterName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_name = 2;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectFileTransferRunEvent.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectFileTransferRunEvent} returns this
 */
proto.prehog.v1alpha.ConnectFileTransferRunEvent.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool is_upload = 3;
 * @return {boolean}
 */
proto.prehog.v1alpha.ConnectFileTransferRunEvent.prototype.getIsUpload = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.prehog.v1alpha.ConnectFileTransferRunEvent} returns this
 */
proto.prehog.v1alpha.ConnectFileTransferRunEvent.prototype.setIsUpload = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    jobRole: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent}
 */
proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent;
  return proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent}
 */
proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setJobRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJobRole();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string job_role = 1;
 * @return {string}
 */
proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent.prototype.getJobRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent} returns this
 */
proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent.prototype.setJobRole = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.oneofGroups_ = [[3,4,5,6,7,8,9]];

/**
 * @enum {number}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.EventCase = {
  EVENT_NOT_SET: 0,
  CLUSTER_LOGIN: 3,
  PROTOCOL_USE: 4,
  ACCESS_REQUEST_CREATE: 5,
  ACCESS_REQUEST_REVIEW: 6,
  ACCESS_REQUEST_ASSUME_ROLE: 7,
  FILE_TRANSFER_RUN: 8,
  USER_JOB_ROLE_UPDATE: 9
};

/**
 * @return {proto.prehog.v1alpha.SubmitConnectEventRequest.EventCase}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.getEventCase = function() {
  return /** @type {proto.prehog.v1alpha.SubmitConnectEventRequest.EventCase} */(jspb.Message.computeOneofCase(this, proto.prehog.v1alpha.SubmitConnectEventRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.SubmitConnectEventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.SubmitConnectEventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    distinctId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    clusterLogin: (f = msg.getClusterLogin()) && proto.prehog.v1alpha.ConnectClusterLoginEvent.toObject(includeInstance, f),
    protocolUse: (f = msg.getProtocolUse()) && proto.prehog.v1alpha.ConnectProtocolUseEvent.toObject(includeInstance, f),
    accessRequestCreate: (f = msg.getAccessRequestCreate()) && proto.prehog.v1alpha.ConnectAccessRequestCreateEvent.toObject(includeInstance, f),
    accessRequestReview: (f = msg.getAccessRequestReview()) && proto.prehog.v1alpha.ConnectAccessRequestReviewEvent.toObject(includeInstance, f),
    accessRequestAssumeRole: (f = msg.getAccessRequestAssumeRole()) && proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent.toObject(includeInstance, f),
    fileTransferRun: (f = msg.getFileTransferRun()) && proto.prehog.v1alpha.ConnectFileTransferRunEvent.toObject(includeInstance, f),
    userJobRoleUpdate: (f = msg.getUserJobRoleUpdate()) && proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.SubmitConnectEventRequest}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.SubmitConnectEventRequest;
  return proto.prehog.v1alpha.SubmitConnectEventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.SubmitConnectEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.SubmitConnectEventRequest}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDistinctId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 3:
      var value = new proto.prehog.v1alpha.ConnectClusterLoginEvent;
      reader.readMessage(value,proto.prehog.v1alpha.ConnectClusterLoginEvent.deserializeBinaryFromReader);
      msg.setClusterLogin(value);
      break;
    case 4:
      var value = new proto.prehog.v1alpha.ConnectProtocolUseEvent;
      reader.readMessage(value,proto.prehog.v1alpha.ConnectProtocolUseEvent.deserializeBinaryFromReader);
      msg.setProtocolUse(value);
      break;
    case 5:
      var value = new proto.prehog.v1alpha.ConnectAccessRequestCreateEvent;
      reader.readMessage(value,proto.prehog.v1alpha.ConnectAccessRequestCreateEvent.deserializeBinaryFromReader);
      msg.setAccessRequestCreate(value);
      break;
    case 6:
      var value = new proto.prehog.v1alpha.ConnectAccessRequestReviewEvent;
      reader.readMessage(value,proto.prehog.v1alpha.ConnectAccessRequestReviewEvent.deserializeBinaryFromReader);
      msg.setAccessRequestReview(value);
      break;
    case 7:
      var value = new proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent;
      reader.readMessage(value,proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent.deserializeBinaryFromReader);
      msg.setAccessRequestAssumeRole(value);
      break;
    case 8:
      var value = new proto.prehog.v1alpha.ConnectFileTransferRunEvent;
      reader.readMessage(value,proto.prehog.v1alpha.ConnectFileTransferRunEvent.deserializeBinaryFromReader);
      msg.setFileTransferRun(value);
      break;
    case 9:
      var value = new proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent;
      reader.readMessage(value,proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent.deserializeBinaryFromReader);
      msg.setUserJobRoleUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.SubmitConnectEventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.SubmitConnectEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDistinctId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getClusterLogin();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.prehog.v1alpha.ConnectClusterLoginEvent.serializeBinaryToWriter
    );
  }
  f = message.getProtocolUse();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.prehog.v1alpha.ConnectProtocolUseEvent.serializeBinaryToWriter
    );
  }
  f = message.getAccessRequestCreate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.prehog.v1alpha.ConnectAccessRequestCreateEvent.serializeBinaryToWriter
    );
  }
  f = message.getAccessRequestReview();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.prehog.v1alpha.ConnectAccessRequestReviewEvent.serializeBinaryToWriter
    );
  }
  f = message.getAccessRequestAssumeRole();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent.serializeBinaryToWriter
    );
  }
  f = message.getFileTransferRun();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.prehog.v1alpha.ConnectFileTransferRunEvent.serializeBinaryToWriter
    );
  }
  f = message.getUserJobRoleUpdate();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional string distinct_id = 1;
 * @return {string}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.getDistinctId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.SubmitConnectEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.setDistinctId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitConnectEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitConnectEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ConnectClusterLoginEvent cluster_login = 3;
 * @return {?proto.prehog.v1alpha.ConnectClusterLoginEvent}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.getClusterLogin = function() {
  return /** @type{?proto.prehog.v1alpha.ConnectClusterLoginEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.ConnectClusterLoginEvent, 3));
};


/**
 * @param {?proto.prehog.v1alpha.ConnectClusterLoginEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitConnectEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.setClusterLogin = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.prehog.v1alpha.SubmitConnectEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitConnectEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.clearClusterLogin = function() {
  return this.setClusterLogin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.hasClusterLogin = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ConnectProtocolUseEvent protocol_use = 4;
 * @return {?proto.prehog.v1alpha.ConnectProtocolUseEvent}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.getProtocolUse = function() {
  return /** @type{?proto.prehog.v1alpha.ConnectProtocolUseEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.ConnectProtocolUseEvent, 4));
};


/**
 * @param {?proto.prehog.v1alpha.ConnectProtocolUseEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitConnectEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.setProtocolUse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.prehog.v1alpha.SubmitConnectEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitConnectEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.clearProtocolUse = function() {
  return this.setProtocolUse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.hasProtocolUse = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ConnectAccessRequestCreateEvent access_request_create = 5;
 * @return {?proto.prehog.v1alpha.ConnectAccessRequestCreateEvent}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.getAccessRequestCreate = function() {
  return /** @type{?proto.prehog.v1alpha.ConnectAccessRequestCreateEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.ConnectAccessRequestCreateEvent, 5));
};


/**
 * @param {?proto.prehog.v1alpha.ConnectAccessRequestCreateEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitConnectEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.setAccessRequestCreate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.prehog.v1alpha.SubmitConnectEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitConnectEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.clearAccessRequestCreate = function() {
  return this.setAccessRequestCreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.hasAccessRequestCreate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ConnectAccessRequestReviewEvent access_request_review = 6;
 * @return {?proto.prehog.v1alpha.ConnectAccessRequestReviewEvent}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.getAccessRequestReview = function() {
  return /** @type{?proto.prehog.v1alpha.ConnectAccessRequestReviewEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.ConnectAccessRequestReviewEvent, 6));
};


/**
 * @param {?proto.prehog.v1alpha.ConnectAccessRequestReviewEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitConnectEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.setAccessRequestReview = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.prehog.v1alpha.SubmitConnectEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitConnectEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.clearAccessRequestReview = function() {
  return this.setAccessRequestReview(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.hasAccessRequestReview = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ConnectAccessRequestAssumeRoleEvent access_request_assume_role = 7;
 * @return {?proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.getAccessRequestAssumeRole = function() {
  return /** @type{?proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent, 7));
};


/**
 * @param {?proto.prehog.v1alpha.ConnectAccessRequestAssumeRoleEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitConnectEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.setAccessRequestAssumeRole = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.prehog.v1alpha.SubmitConnectEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitConnectEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.clearAccessRequestAssumeRole = function() {
  return this.setAccessRequestAssumeRole(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.hasAccessRequestAssumeRole = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ConnectFileTransferRunEvent file_transfer_run = 8;
 * @return {?proto.prehog.v1alpha.ConnectFileTransferRunEvent}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.getFileTransferRun = function() {
  return /** @type{?proto.prehog.v1alpha.ConnectFileTransferRunEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.ConnectFileTransferRunEvent, 8));
};


/**
 * @param {?proto.prehog.v1alpha.ConnectFileTransferRunEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitConnectEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.setFileTransferRun = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.prehog.v1alpha.SubmitConnectEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitConnectEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.clearFileTransferRun = function() {
  return this.setFileTransferRun(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.hasFileTransferRun = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ConnectUserJobRoleUpdateEvent user_job_role_update = 9;
 * @return {?proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.getUserJobRoleUpdate = function() {
  return /** @type{?proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent, 9));
};


/**
 * @param {?proto.prehog.v1alpha.ConnectUserJobRoleUpdateEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitConnectEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.setUserJobRoleUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.prehog.v1alpha.SubmitConnectEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitConnectEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.clearUserJobRoleUpdate = function() {
  return this.setUserJobRoleUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitConnectEventRequest.prototype.hasUserJobRoleUpdate = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.SubmitConnectEventResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.SubmitConnectEventResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.SubmitConnectEventResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.SubmitConnectEventResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.SubmitConnectEventResponse}
 */
proto.prehog.v1alpha.SubmitConnectEventResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.SubmitConnectEventResponse;
  return proto.prehog.v1alpha.SubmitConnectEventResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.SubmitConnectEventResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.SubmitConnectEventResponse}
 */
proto.prehog.v1alpha.SubmitConnectEventResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.SubmitConnectEventResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.SubmitConnectEventResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.SubmitConnectEventResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.SubmitConnectEventResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.prehog.v1alpha);
