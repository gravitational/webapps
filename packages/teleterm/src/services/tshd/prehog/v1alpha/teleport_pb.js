// source: prehog/v1alpha/teleport.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.prehog.v1alpha.ResourceCreateEvent', null, global);
goog.exportSymbol('proto.prehog.v1alpha.SSOCreateEvent', null, global);
goog.exportSymbol('proto.prehog.v1alpha.SessionStartEvent', null, global);
goog.exportSymbol('proto.prehog.v1alpha.SubmitEventRequest', null, global);
goog.exportSymbol('proto.prehog.v1alpha.SubmitEventRequest.EventCase', null, global);
goog.exportSymbol('proto.prehog.v1alpha.SubmitEventResponse', null, global);
goog.exportSymbol('proto.prehog.v1alpha.UIBannerClickEvent', null, global);
goog.exportSymbol('proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent', null, global);
goog.exportSymbol('proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent', null, global);
goog.exportSymbol('proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent', null, global);
goog.exportSymbol('proto.prehog.v1alpha.UIOnboardGetStartedClickEvent', null, global);
goog.exportSymbol('proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent', null, global);
goog.exportSymbol('proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent', null, global);
goog.exportSymbol('proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent', null, global);
goog.exportSymbol('proto.prehog.v1alpha.UserLoginEvent', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.UserLoginEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.UserLoginEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.UserLoginEvent.displayName = 'proto.prehog.v1alpha.UserLoginEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.SSOCreateEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.SSOCreateEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.SSOCreateEvent.displayName = 'proto.prehog.v1alpha.SSOCreateEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.ResourceCreateEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.ResourceCreateEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.ResourceCreateEvent.displayName = 'proto.prehog.v1alpha.ResourceCreateEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.SessionStartEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.SessionStartEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.SessionStartEvent.displayName = 'proto.prehog.v1alpha.SessionStartEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.UIBannerClickEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.UIBannerClickEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.UIBannerClickEvent.displayName = 'proto.prehog.v1alpha.UIBannerClickEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.UIOnboardGetStartedClickEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.UIOnboardGetStartedClickEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.UIOnboardGetStartedClickEvent.displayName = 'proto.prehog.v1alpha.UIOnboardGetStartedClickEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent.displayName = 'proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent.displayName = 'proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent.displayName = 'proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent.displayName = 'proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent.displayName = 'proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent.displayName = 'proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.SubmitEventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.prehog.v1alpha.SubmitEventRequest.oneofGroups_);
};
goog.inherits(proto.prehog.v1alpha.SubmitEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.SubmitEventRequest.displayName = 'proto.prehog.v1alpha.SubmitEventRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.SubmitEventResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.SubmitEventResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.SubmitEventResponse.displayName = 'proto.prehog.v1alpha.SubmitEventResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.UserLoginEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.UserLoginEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.UserLoginEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.UserLoginEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    userName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    connectorType: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.UserLoginEvent}
 */
proto.prehog.v1alpha.UserLoginEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.UserLoginEvent;
  return proto.prehog.v1alpha.UserLoginEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.UserLoginEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.UserLoginEvent}
 */
proto.prehog.v1alpha.UserLoginEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectorType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.UserLoginEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.UserLoginEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.UserLoginEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.UserLoginEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConnectorType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.prehog.v1alpha.UserLoginEvent.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.UserLoginEvent} returns this
 */
proto.prehog.v1alpha.UserLoginEvent.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string connector_type = 2;
 * @return {string}
 */
proto.prehog.v1alpha.UserLoginEvent.prototype.getConnectorType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.UserLoginEvent} returns this
 */
proto.prehog.v1alpha.UserLoginEvent.prototype.setConnectorType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.SSOCreateEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.SSOCreateEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.SSOCreateEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.SSOCreateEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectorType: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.SSOCreateEvent}
 */
proto.prehog.v1alpha.SSOCreateEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.SSOCreateEvent;
  return proto.prehog.v1alpha.SSOCreateEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.SSOCreateEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.SSOCreateEvent}
 */
proto.prehog.v1alpha.SSOCreateEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectorType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.SSOCreateEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.SSOCreateEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.SSOCreateEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.SSOCreateEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectorType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string connector_type = 1;
 * @return {string}
 */
proto.prehog.v1alpha.SSOCreateEvent.prototype.getConnectorType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.SSOCreateEvent} returns this
 */
proto.prehog.v1alpha.SSOCreateEvent.prototype.setConnectorType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.ResourceCreateEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.ResourceCreateEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.ResourceCreateEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.ResourceCreateEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceType: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.ResourceCreateEvent}
 */
proto.prehog.v1alpha.ResourceCreateEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.ResourceCreateEvent;
  return proto.prehog.v1alpha.ResourceCreateEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.ResourceCreateEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.ResourceCreateEvent}
 */
proto.prehog.v1alpha.ResourceCreateEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.ResourceCreateEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.ResourceCreateEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.ResourceCreateEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.ResourceCreateEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string resource_type = 1;
 * @return {string}
 */
proto.prehog.v1alpha.ResourceCreateEvent.prototype.getResourceType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.ResourceCreateEvent} returns this
 */
proto.prehog.v1alpha.ResourceCreateEvent.prototype.setResourceType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.SessionStartEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.SessionStartEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.SessionStartEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.SessionStartEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    userName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sessionType: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.SessionStartEvent}
 */
proto.prehog.v1alpha.SessionStartEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.SessionStartEvent;
  return proto.prehog.v1alpha.SessionStartEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.SessionStartEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.SessionStartEvent}
 */
proto.prehog.v1alpha.SessionStartEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.SessionStartEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.SessionStartEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.SessionStartEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.SessionStartEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSessionType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.prehog.v1alpha.SessionStartEvent.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.SessionStartEvent} returns this
 */
proto.prehog.v1alpha.SessionStartEvent.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string session_type = 2;
 * @return {string}
 */
proto.prehog.v1alpha.SessionStartEvent.prototype.getSessionType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.SessionStartEvent} returns this
 */
proto.prehog.v1alpha.SessionStartEvent.prototype.setSessionType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.UIBannerClickEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.UIBannerClickEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.UIBannerClickEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.UIBannerClickEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    userName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    alert: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.UIBannerClickEvent}
 */
proto.prehog.v1alpha.UIBannerClickEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.UIBannerClickEvent;
  return proto.prehog.v1alpha.UIBannerClickEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.UIBannerClickEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.UIBannerClickEvent}
 */
proto.prehog.v1alpha.UIBannerClickEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlert(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.UIBannerClickEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.UIBannerClickEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.UIBannerClickEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.UIBannerClickEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAlert();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.prehog.v1alpha.UIBannerClickEvent.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.UIBannerClickEvent} returns this
 */
proto.prehog.v1alpha.UIBannerClickEvent.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string alert = 2;
 * @return {string}
 */
proto.prehog.v1alpha.UIBannerClickEvent.prototype.getAlert = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.UIBannerClickEvent} returns this
 */
proto.prehog.v1alpha.UIBannerClickEvent.prototype.setAlert = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.UIOnboardGetStartedClickEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.UIOnboardGetStartedClickEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.UIOnboardGetStartedClickEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.UIOnboardGetStartedClickEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    userName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.UIOnboardGetStartedClickEvent}
 */
proto.prehog.v1alpha.UIOnboardGetStartedClickEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.UIOnboardGetStartedClickEvent;
  return proto.prehog.v1alpha.UIOnboardGetStartedClickEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.UIOnboardGetStartedClickEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.UIOnboardGetStartedClickEvent}
 */
proto.prehog.v1alpha.UIOnboardGetStartedClickEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.UIOnboardGetStartedClickEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.UIOnboardGetStartedClickEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.UIOnboardGetStartedClickEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.UIOnboardGetStartedClickEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.prehog.v1alpha.UIOnboardGetStartedClickEvent.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.UIOnboardGetStartedClickEvent} returns this
 */
proto.prehog.v1alpha.UIOnboardGetStartedClickEvent.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    userName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent}
 */
proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent;
  return proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent}
 */
proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent} returns this
 */
proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    userName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent}
 */
proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent;
  return proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent}
 */
proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent} returns this
 */
proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    userName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent}
 */
proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent;
  return proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent}
 */
proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent} returns this
 */
proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    userName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent}
 */
proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent;
  return proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent}
 */
proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent} returns this
 */
proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    userName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent}
 */
proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent;
  return proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent}
 */
proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent} returns this
 */
proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    userName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent}
 */
proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent;
  return proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent}
 */
proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent} returns this
 */
proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.prehog.v1alpha.SubmitEventRequest.oneofGroups_ = [[3,4,5,6,7,8,9,10,11,12,13,14]];

/**
 * @enum {number}
 */
proto.prehog.v1alpha.SubmitEventRequest.EventCase = {
  EVENT_NOT_SET: 0,
  USER_LOGIN: 3,
  SSO_CREATE: 4,
  RESOURCE_CREATE: 5,
  SESSION_START: 6,
  UI_BANNER_CLICK: 7,
  UI_ONBOARD_GET_STARTED_CLICK: 8,
  UI_ONBOARD_COMPLETE_GO_TO_DASHBOARD_CLICK: 9,
  UI_ONBOARD_ADD_FIRST_RESOURCE_CLICK: 10,
  UI_ONBOARD_ADD_FIRST_RESOURCE_LATER_CLICK: 11,
  UI_ONBOARD_SET_CREDENTIAL_SUBMIT: 12,
  UI_ONBOARD_REGISTER_CHALLENGE_SUBMIT: 13,
  UI_RECOVERY_CODES_CONTINUE_CLICK: 14
};

/**
 * @return {proto.prehog.v1alpha.SubmitEventRequest.EventCase}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.getEventCase = function() {
  return /** @type {proto.prehog.v1alpha.SubmitEventRequest.EventCase} */(jspb.Message.computeOneofCase(this, proto.prehog.v1alpha.SubmitEventRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.SubmitEventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.SubmitEventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.SubmitEventRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    userLogin: (f = msg.getUserLogin()) && proto.prehog.v1alpha.UserLoginEvent.toObject(includeInstance, f),
    ssoCreate: (f = msg.getSsoCreate()) && proto.prehog.v1alpha.SSOCreateEvent.toObject(includeInstance, f),
    resourceCreate: (f = msg.getResourceCreate()) && proto.prehog.v1alpha.ResourceCreateEvent.toObject(includeInstance, f),
    sessionStart: (f = msg.getSessionStart()) && proto.prehog.v1alpha.SessionStartEvent.toObject(includeInstance, f),
    uiBannerClick: (f = msg.getUiBannerClick()) && proto.prehog.v1alpha.UIBannerClickEvent.toObject(includeInstance, f),
    uiOnboardGetStartedClick: (f = msg.getUiOnboardGetStartedClick()) && proto.prehog.v1alpha.UIOnboardGetStartedClickEvent.toObject(includeInstance, f),
    uiOnboardCompleteGoToDashboardClick: (f = msg.getUiOnboardCompleteGoToDashboardClick()) && proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent.toObject(includeInstance, f),
    uiOnboardAddFirstResourceClick: (f = msg.getUiOnboardAddFirstResourceClick()) && proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent.toObject(includeInstance, f),
    uiOnboardAddFirstResourceLaterClick: (f = msg.getUiOnboardAddFirstResourceLaterClick()) && proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent.toObject(includeInstance, f),
    uiOnboardSetCredentialSubmit: (f = msg.getUiOnboardSetCredentialSubmit()) && proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent.toObject(includeInstance, f),
    uiOnboardRegisterChallengeSubmit: (f = msg.getUiOnboardRegisterChallengeSubmit()) && proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent.toObject(includeInstance, f),
    uiRecoveryCodesContinueClick: (f = msg.getUiRecoveryCodesContinueClick()) && proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.SubmitEventRequest}
 */
proto.prehog.v1alpha.SubmitEventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.SubmitEventRequest;
  return proto.prehog.v1alpha.SubmitEventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.SubmitEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.SubmitEventRequest}
 */
proto.prehog.v1alpha.SubmitEventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterName(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 3:
      var value = new proto.prehog.v1alpha.UserLoginEvent;
      reader.readMessage(value,proto.prehog.v1alpha.UserLoginEvent.deserializeBinaryFromReader);
      msg.setUserLogin(value);
      break;
    case 4:
      var value = new proto.prehog.v1alpha.SSOCreateEvent;
      reader.readMessage(value,proto.prehog.v1alpha.SSOCreateEvent.deserializeBinaryFromReader);
      msg.setSsoCreate(value);
      break;
    case 5:
      var value = new proto.prehog.v1alpha.ResourceCreateEvent;
      reader.readMessage(value,proto.prehog.v1alpha.ResourceCreateEvent.deserializeBinaryFromReader);
      msg.setResourceCreate(value);
      break;
    case 6:
      var value = new proto.prehog.v1alpha.SessionStartEvent;
      reader.readMessage(value,proto.prehog.v1alpha.SessionStartEvent.deserializeBinaryFromReader);
      msg.setSessionStart(value);
      break;
    case 7:
      var value = new proto.prehog.v1alpha.UIBannerClickEvent;
      reader.readMessage(value,proto.prehog.v1alpha.UIBannerClickEvent.deserializeBinaryFromReader);
      msg.setUiBannerClick(value);
      break;
    case 8:
      var value = new proto.prehog.v1alpha.UIOnboardGetStartedClickEvent;
      reader.readMessage(value,proto.prehog.v1alpha.UIOnboardGetStartedClickEvent.deserializeBinaryFromReader);
      msg.setUiOnboardGetStartedClick(value);
      break;
    case 9:
      var value = new proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent;
      reader.readMessage(value,proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent.deserializeBinaryFromReader);
      msg.setUiOnboardCompleteGoToDashboardClick(value);
      break;
    case 10:
      var value = new proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent;
      reader.readMessage(value,proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent.deserializeBinaryFromReader);
      msg.setUiOnboardAddFirstResourceClick(value);
      break;
    case 11:
      var value = new proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent;
      reader.readMessage(value,proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent.deserializeBinaryFromReader);
      msg.setUiOnboardAddFirstResourceLaterClick(value);
      break;
    case 12:
      var value = new proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent;
      reader.readMessage(value,proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent.deserializeBinaryFromReader);
      msg.setUiOnboardSetCredentialSubmit(value);
      break;
    case 13:
      var value = new proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent;
      reader.readMessage(value,proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent.deserializeBinaryFromReader);
      msg.setUiOnboardRegisterChallengeSubmit(value);
      break;
    case 14:
      var value = new proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent;
      reader.readMessage(value,proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent.deserializeBinaryFromReader);
      msg.setUiRecoveryCodesContinueClick(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.SubmitEventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.SubmitEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.SubmitEventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUserLogin();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.prehog.v1alpha.UserLoginEvent.serializeBinaryToWriter
    );
  }
  f = message.getSsoCreate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.prehog.v1alpha.SSOCreateEvent.serializeBinaryToWriter
    );
  }
  f = message.getResourceCreate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.prehog.v1alpha.ResourceCreateEvent.serializeBinaryToWriter
    );
  }
  f = message.getSessionStart();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.prehog.v1alpha.SessionStartEvent.serializeBinaryToWriter
    );
  }
  f = message.getUiBannerClick();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.prehog.v1alpha.UIBannerClickEvent.serializeBinaryToWriter
    );
  }
  f = message.getUiOnboardGetStartedClick();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.prehog.v1alpha.UIOnboardGetStartedClickEvent.serializeBinaryToWriter
    );
  }
  f = message.getUiOnboardCompleteGoToDashboardClick();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent.serializeBinaryToWriter
    );
  }
  f = message.getUiOnboardAddFirstResourceClick();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent.serializeBinaryToWriter
    );
  }
  f = message.getUiOnboardAddFirstResourceLaterClick();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent.serializeBinaryToWriter
    );
  }
  f = message.getUiOnboardSetCredentialSubmit();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent.serializeBinaryToWriter
    );
  }
  f = message.getUiOnboardRegisterChallengeSubmit();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent.serializeBinaryToWriter
    );
  }
  f = message.getUiRecoveryCodesContinueClick();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional string cluster_name = 1;
 * @return {string}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.getClusterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.setClusterName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitEventRequest.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional UserLoginEvent user_login = 3;
 * @return {?proto.prehog.v1alpha.UserLoginEvent}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.getUserLogin = function() {
  return /** @type{?proto.prehog.v1alpha.UserLoginEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.UserLoginEvent, 3));
};


/**
 * @param {?proto.prehog.v1alpha.UserLoginEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitEventRequest.prototype.setUserLogin = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.prehog.v1alpha.SubmitEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.clearUserLogin = function() {
  return this.setUserLogin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.hasUserLogin = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SSOCreateEvent sso_create = 4;
 * @return {?proto.prehog.v1alpha.SSOCreateEvent}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.getSsoCreate = function() {
  return /** @type{?proto.prehog.v1alpha.SSOCreateEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.SSOCreateEvent, 4));
};


/**
 * @param {?proto.prehog.v1alpha.SSOCreateEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitEventRequest.prototype.setSsoCreate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.prehog.v1alpha.SubmitEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.clearSsoCreate = function() {
  return this.setSsoCreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.hasSsoCreate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ResourceCreateEvent resource_create = 5;
 * @return {?proto.prehog.v1alpha.ResourceCreateEvent}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.getResourceCreate = function() {
  return /** @type{?proto.prehog.v1alpha.ResourceCreateEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.ResourceCreateEvent, 5));
};


/**
 * @param {?proto.prehog.v1alpha.ResourceCreateEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitEventRequest.prototype.setResourceCreate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.prehog.v1alpha.SubmitEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.clearResourceCreate = function() {
  return this.setResourceCreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.hasResourceCreate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional SessionStartEvent session_start = 6;
 * @return {?proto.prehog.v1alpha.SessionStartEvent}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.getSessionStart = function() {
  return /** @type{?proto.prehog.v1alpha.SessionStartEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.SessionStartEvent, 6));
};


/**
 * @param {?proto.prehog.v1alpha.SessionStartEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitEventRequest.prototype.setSessionStart = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.prehog.v1alpha.SubmitEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.clearSessionStart = function() {
  return this.setSessionStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.hasSessionStart = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional UIBannerClickEvent ui_banner_click = 7;
 * @return {?proto.prehog.v1alpha.UIBannerClickEvent}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.getUiBannerClick = function() {
  return /** @type{?proto.prehog.v1alpha.UIBannerClickEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.UIBannerClickEvent, 7));
};


/**
 * @param {?proto.prehog.v1alpha.UIBannerClickEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitEventRequest.prototype.setUiBannerClick = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.prehog.v1alpha.SubmitEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.clearUiBannerClick = function() {
  return this.setUiBannerClick(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.hasUiBannerClick = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional UIOnboardGetStartedClickEvent ui_onboard_get_started_click = 8;
 * @return {?proto.prehog.v1alpha.UIOnboardGetStartedClickEvent}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.getUiOnboardGetStartedClick = function() {
  return /** @type{?proto.prehog.v1alpha.UIOnboardGetStartedClickEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.UIOnboardGetStartedClickEvent, 8));
};


/**
 * @param {?proto.prehog.v1alpha.UIOnboardGetStartedClickEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitEventRequest.prototype.setUiOnboardGetStartedClick = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.prehog.v1alpha.SubmitEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.clearUiOnboardGetStartedClick = function() {
  return this.setUiOnboardGetStartedClick(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.hasUiOnboardGetStartedClick = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional UIOnboardCompleteGoToDashboardClickEvent ui_onboard_complete_go_to_dashboard_click = 9;
 * @return {?proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.getUiOnboardCompleteGoToDashboardClick = function() {
  return /** @type{?proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent, 9));
};


/**
 * @param {?proto.prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitEventRequest.prototype.setUiOnboardCompleteGoToDashboardClick = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.prehog.v1alpha.SubmitEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.clearUiOnboardCompleteGoToDashboardClick = function() {
  return this.setUiOnboardCompleteGoToDashboardClick(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.hasUiOnboardCompleteGoToDashboardClick = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional UIOnboardAddFirstResourceClickEvent ui_onboard_add_first_resource_click = 10;
 * @return {?proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.getUiOnboardAddFirstResourceClick = function() {
  return /** @type{?proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent, 10));
};


/**
 * @param {?proto.prehog.v1alpha.UIOnboardAddFirstResourceClickEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitEventRequest.prototype.setUiOnboardAddFirstResourceClick = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.prehog.v1alpha.SubmitEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.clearUiOnboardAddFirstResourceClick = function() {
  return this.setUiOnboardAddFirstResourceClick(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.hasUiOnboardAddFirstResourceClick = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional UIOnboardAddFirstResourceLaterClickEvent ui_onboard_add_first_resource_later_click = 11;
 * @return {?proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.getUiOnboardAddFirstResourceLaterClick = function() {
  return /** @type{?proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent, 11));
};


/**
 * @param {?proto.prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitEventRequest.prototype.setUiOnboardAddFirstResourceLaterClick = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.prehog.v1alpha.SubmitEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.clearUiOnboardAddFirstResourceLaterClick = function() {
  return this.setUiOnboardAddFirstResourceLaterClick(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.hasUiOnboardAddFirstResourceLaterClick = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional UIOnboardSetCredentialSubmitEvent ui_onboard_set_credential_submit = 12;
 * @return {?proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.getUiOnboardSetCredentialSubmit = function() {
  return /** @type{?proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent, 12));
};


/**
 * @param {?proto.prehog.v1alpha.UIOnboardSetCredentialSubmitEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitEventRequest.prototype.setUiOnboardSetCredentialSubmit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.prehog.v1alpha.SubmitEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.clearUiOnboardSetCredentialSubmit = function() {
  return this.setUiOnboardSetCredentialSubmit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.hasUiOnboardSetCredentialSubmit = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional UIOnboardRegisterChallengeSubmitEvent ui_onboard_register_challenge_submit = 13;
 * @return {?proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.getUiOnboardRegisterChallengeSubmit = function() {
  return /** @type{?proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent, 13));
};


/**
 * @param {?proto.prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitEventRequest.prototype.setUiOnboardRegisterChallengeSubmit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.prehog.v1alpha.SubmitEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.clearUiOnboardRegisterChallengeSubmit = function() {
  return this.setUiOnboardRegisterChallengeSubmit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.hasUiOnboardRegisterChallengeSubmit = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional UIRecoveryCodesContinueClickEvent ui_recovery_codes_continue_click = 14;
 * @return {?proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.getUiRecoveryCodesContinueClick = function() {
  return /** @type{?proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent, 14));
};


/**
 * @param {?proto.prehog.v1alpha.UIRecoveryCodesContinueClickEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitEventRequest.prototype.setUiRecoveryCodesContinueClick = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.prehog.v1alpha.SubmitEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.clearUiRecoveryCodesContinueClick = function() {
  return this.setUiRecoveryCodesContinueClick(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitEventRequest.prototype.hasUiRecoveryCodesContinueClick = function() {
  return jspb.Message.getField(this, 14) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.SubmitEventResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.SubmitEventResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.SubmitEventResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.SubmitEventResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.SubmitEventResponse}
 */
proto.prehog.v1alpha.SubmitEventResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.SubmitEventResponse;
  return proto.prehog.v1alpha.SubmitEventResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.SubmitEventResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.SubmitEventResponse}
 */
proto.prehog.v1alpha.SubmitEventResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.SubmitEventResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.SubmitEventResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.SubmitEventResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.SubmitEventResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.prehog.v1alpha);
