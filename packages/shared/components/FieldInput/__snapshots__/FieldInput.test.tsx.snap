// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot tests 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c0 {
  box-sizing: border-box;
  margin-bottom: 40px;
}

.c3 {
  appearance: none;
  border: none;
  border-radius: 4px;
  box-shadow: inset 0 2px 4px rgba(0,0,0,0.24);
  box-sizing: border-box;
  display: block;
  height: 40px;
  font-size: 16px;
  padding: 0 16px;
  outline: none;
  width: 100%;
  color: #324148;
  background-color: #FFFFFF;
  margin-top: 4px;
  border: 2px solid #ff1744;
  padding: 10px 14px;
}

.c3::-ms-clear {
  display: none;
}

.c3::placeholder {
  opacity: 0.4;
}

.c3:read-only {
  cursor: not-allowed;
}

.c1 {
  color: #ff1744;
  display: block;
  font-size: 11px;
  font-weight: 500;
  text-transform: uppercase;
  width: 100%;
  margin-bottom: 0px;
}

.c2 {
  overflow: hidden;
  text-overflow: ellipsis;
  margin: 0px;
}

<body>
    <div>
      <div
        class="c0"
        name="optional name"
      >
        <label
          class="c1"
          font-size="0"
        >
          errorMsg
          <span
            class="c2"
            style="font-weight: normal;"
          >
             - Optional tabel tip
          </span>
          <input
            autocomplete="off"
            class="c3"
            color="text.onLight"
            inputmode="text"
            type="text"
            value="value"
          />
        </label>
      </div>
      <div
        class="c0"
        name="optional name"
      >
        <label
          class="c1"
          font-size="0"
        >
          errorMsg
          <input
            autocomplete="off"
            class="c3"
            color="text.onLight"
            inputmode="text"
            placeholder="placeholder"
            type="text"
            value=""
          />
        </label>
      </div>
      <div
        class="c0"
      >
        <input
          autocomplete="off"
          class="c3"
          color="text.onLight"
          inputmode="text"
          placeholder="without label"
          type="text"
          value=""
        />
      </div>
    </div>
  </body>,
  "container": .c0 {
  box-sizing: border-box;
  margin-bottom: 40px;
}

.c3 {
  appearance: none;
  border: none;
  border-radius: 4px;
  box-shadow: inset 0 2px 4px rgba(0,0,0,0.24);
  box-sizing: border-box;
  display: block;
  height: 40px;
  font-size: 16px;
  padding: 0 16px;
  outline: none;
  width: 100%;
  color: #324148;
  background-color: #FFFFFF;
  margin-top: 4px;
  border: 2px solid #ff1744;
  padding: 10px 14px;
}

.c3::-ms-clear {
  display: none;
}

.c3::placeholder {
  opacity: 0.4;
}

.c3:read-only {
  cursor: not-allowed;
}

.c1 {
  color: #ff1744;
  display: block;
  font-size: 11px;
  font-weight: 500;
  text-transform: uppercase;
  width: 100%;
  margin-bottom: 0px;
}

.c2 {
  overflow: hidden;
  text-overflow: ellipsis;
  margin: 0px;
}

<div>
    <div
      class="c0"
      name="optional name"
    >
      <label
        class="c1"
        font-size="0"
      >
        errorMsg
        <span
          class="c2"
          style="font-weight: normal;"
        >
           - Optional tabel tip
        </span>
        <input
          autocomplete="off"
          class="c3"
          color="text.onLight"
          inputmode="text"
          type="text"
          value="value"
        />
      </label>
    </div>
    <div
      class="c0"
      name="optional name"
    >
      <label
        class="c1"
        font-size="0"
      >
        errorMsg
        <input
          autocomplete="off"
          class="c3"
          color="text.onLight"
          inputmode="text"
          placeholder="placeholder"
          type="text"
          value=""
        />
      </label>
    </div>
    <div
      class="c0"
    >
      <input
        autocomplete="off"
        class="c3"
        color="text.onLight"
        inputmode="text"
        placeholder="without label"
        type="text"
        value=""
      />
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
